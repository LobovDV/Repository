package com.bookshop.BookShopApp.structure.user;
import com.bookshop.BookShopApp.structure.book.Book;
import com.bookshop.BookShopApp.structure.book.file.FileDownload;
import com.bookshop.BookShopApp.structure.book.review.BookReview;
import com.bookshop.BookShopApp.structure.book.review.BookScore;
import com.bookshop.BookShopApp.structure.book.review.Message;
import com.bookshop.BookShopApp.structure.payments.BalanceTransaction;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.List;

@Entity
@Table(name = "users")
@ApiModel(description = "entity representing a user")
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    @SequenceGenerator( name = "jpaSequence", sequenceName = "users_id_seq", allocationSize = 1, initialValue = 1 )
//    @GeneratedValue( strategy = GenerationType.SEQUENCE, generator = "jpaSequence")  //
    @ApiModelProperty("user id generated by db automatically")
    private int id;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("user hash for identification")
    private String hash;

    @Column(columnDefinition = "TIMESTAMP NOT NULL")
    @ApiModelProperty("date and time user registration")
    private LocalDateTime regTime;

    @Column(columnDefinition = "INT NOT NULL")
    @ApiModelProperty("user account balance")
    private int balance;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("user name")
    private String name;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("login verification code")
    private String code;

    @ApiModelProperty("login verification code expiration")
    private LocalDateTime codeTime;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("authorization roles")
    private String roles;


    @ManyToMany
    @JsonIgnore
    @JoinTable(name = "book2user",
            joinColumns = @JoinColumn(name = "user_id"),
            inverseJoinColumns = @JoinColumn(name = "book_id"))
    private List<Book> userBooks;

    @OneToMany(mappedBy = "contactUser")
    @JsonIgnore
    private List<UserContact> contacts;

    @OneToMany(mappedBy = "reviewUser")
    @JsonIgnore
    private List<BookReview> reviews;

    @OneToMany(mappedBy = "transactionUser")
    @JsonIgnore
    private List<BalanceTransaction> transactions;

    @OneToMany(mappedBy = "fileUser")
    @JsonIgnore
    private List<FileDownload> files;

    @OneToMany(mappedBy = "messageUser")
    @JsonIgnore
    private List<Message> messages;

    @OneToMany(mappedBy = "scoreUser")
    @JsonIgnore
    private List<BookScore> scores;

    public List<BookScore> getScores() {
        return scores;
    }

    public void setScores(List<BookScore> scores) {
        this.scores = scores;
    }

    public List<Message> getMessages() {
        return messages;
    }

    public void setMessages(List<Message> messages) {
        this.messages = messages;
    }

    public List<FileDownload> getFiles() {
        return files;
    }

    public void setFiles(List<FileDownload> files) {
        this.files = files;
    }

    public List<BalanceTransaction> getTransactions() {
        return transactions;
    }

    public void setTransactions(List<BalanceTransaction> transactions) {
        this.transactions = transactions;
    }

    public List<BookReview> getReviews() {
        return reviews;
    }

    public void setReviews(List<BookReview> reviews) {
        this.reviews = reviews;
    }

    public List<UserContact> getContacts() {
        return contacts;
    }

    public void setContacts(List<UserContact> contacts) {
        this.contacts = contacts;
    }

    public List<Book> getUserBooks() {
        return userBooks;
    }

    public void setUserBooks(List<Book> userBooks) {
        this.userBooks = userBooks;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getHash() {
        return hash;
    }

    public void setHash(String hash) {
        this.hash = hash;
    }

    public LocalDateTime getRegTime() {
        return regTime;
    }

    public void setRegTime(LocalDateTime regTime) {
        this.regTime = regTime;
    }

    public int getBalance() {
        return balance;
    }

    public void setBalance(int balance) {
        this.balance = balance;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getRoles() {
        return roles;
    }

    public void setRoles(String roles) {
        this.roles = roles;
    }

    public LocalDateTime getCodeTime() {
        return codeTime;
    }

    public void setCodeTime(LocalDateTime codeTime) {
        this.codeTime = codeTime;
    }
}
